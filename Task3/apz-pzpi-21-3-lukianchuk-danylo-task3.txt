1 Опис прийнятих інженерних рішень

	Для створення програмного забезпечення для IoT пристрою було використано симулятор Wokwi. Програмний код для пристрою написаний на мові програмування С++. У якості IoT пристрою виступає «розумний» браслет, що надає користувачам доступ до подій та надає можливість відслідковування місцезнаходження його власника (симуляцію зміни яскравості виконує світлодіод). Пристрій складається із мікроконтролера ESP32, 2 кнопок перемикання (зелена та червона), 2 світлодіодів (зелений та червоний), а також сервоприводу (рис. 1).
	Симуляцію доступу до події виконує натискання зеленої кнопки і за умови надання цього доступу засвітиться зелений світлодіод та спрацює сервопривід, наче турнікет дозволяє пройти на захід, а у разі відхилення доступу засвітиться червоний світлодіод, за це також відповідає червона кнопка. Отримання координат від браслету відбувається шляхом введення даних через наявну у Wokwi консоль, адже там немає ніякої іншої можливості симулювати отримання координат. Таким чином, «розумний» браслет виконує дві функції: надання доступу відвідувачам до подій та відслідковування місцезнаходження його власника.

2 Пояснення програмного коду	

	Після увімкнення пристрою він під’єднується до WiFi-мережі (додаток А). Далі створюється вебсервер на 80 порту, який прослуховуватиме HTTP-запити. Для того, аби IoT пристрій міг надсилати запити до серверу створюється HttpClient та за відповідним посиланням відправляється запит на отримання доступу до події:
1	 HTTPClient http;
2    http.begin("https://lmpz5drw-5001.euw.devtunnels.ms/api/SmartBracelet/smart-bracelet/1/grant-access");
3    int httpResponseCode = http.GET();
	Після отримання відповіді від серверу вона обробляється та власнику «розумного» браслету відображається результат спроби отримання доступу до події. У випадку успішного отримання доступу засвітиться зелений світлодіод та спрацює сервопривід:
1    digitalWrite(LED_GREEN_PIN, HIGH);
2    s1.write(180);
3    delay(3000);
4    digitalWrite(LED_GREEN_PIN, LOW);
5    s1.write(90);
6    delay(3000);
	У іншому випадку засвітиться червоний світлодіод, що сигналізуватиме про відсутність доступу:
1	 digitalWrite(LED_RED_PIN, HIGH);
2    delay(1000);
3    digitalWrite(LED_RED_PIN, LOW);
4    delay(1000);
	«Розумний» браслет також може отримувати запит на отримання поточних координат для контролю доступу до різних зон події:
1	server.on(UriBraces("/get-coordinates"), HTTP_GET, GetCoordinates);
	Після отримання запиту симуляція зчитування координат відбувається шляхом отримання даних від користувача через консоль та приведення даних до типу «double»: 
1	 Serial.print("Enter latitude: ");
2  	 while (!Serial.available()) {}
3  
4  	 String input = Serial.readStringUntil('\n');
5  	 Serial.println(input);
6  
7    data[0] = input.toDouble();
	Далі отримані координати передаються до функції «sendResponse», що відповідає за перетворення даних у формат «json» шляхом їх серіалізації:
1	 StaticJsonDocument<2> data;
2  	 data["latitude"] = coordinates[0];
3  	 data["longitude"] = coordinates[1];
4  	 String jsonString;
5
6  	 serializeJson(data, jsonString);
	Після цього серіалізовані координати відправяються у відповідь на сервер:
1	 server.send(200, "application/json", jsonString);

3 Діаграми
	
	Для ІоТ пристрою було створено діаграму прецедентів (рис. 2). Для використання пристрою зазначено трьох акторів: відвідувач, організатор та адміністратор. Для відвідувача доступна можливість отримати доступ до події за браслетом, а для організатора та адміністратора можливість управляти «розумними» браслетами та відслідковувати їх місцеположення для контролю доступу до різних зон події.
	Також було створено діаграму взаємодії (рис. 3). Вона надає можливість візуалізувати, як компоненти IoT пристрою взаємодіють між собою в межах системи. Крім того, вона дозволяє зрозуміти логіку застосунку. 
	Діаграма пакетів для ІоТ пристрою містить 6 пакетів (рис. 4). «Розумний» браслет є основним пакетом оскільки він складається із 4 інших пакетів: мікроконтролера, світлодіодів, кнопок перемикання та сервоприводу.
	До того ж, було створено діаграму активності (рис. 5). Ця діаграма узагальнено показує процес роботи ІоТ пристрою. Вона надає можливість зрозуміти активність, що відбувається в системі.
	Загалом усі наведені діаграми дають краще уявлення про роботу усієї програмної системи для управління подіями в торгово-розважальних центрах «EventSuite».
